#pragma GCC push_options
#pragma GCC optimize ("O0")
#include <stdio.h>
#include <time.h>
#define BILLION 1000000000L
                        //creating a structure of one cache line size
struct car
{
 int arr[16];
};

int main(){
	struct car m1[32768], car1;
int diff;
struct timespec start, end;
	int elems,i;

printf("%ld \n", sizeof(m1));
	elems = (sizeof(m1))/(sizeof(struct car));
 
clock_gettime(CLOCK_MONOTONIC, &start);	/* mark start time */

	     for(i=0; i<elems; i++)
	     {
	      car1 = m1[i] ;
	     }

	clock_gettime(CLOCK_MONOTONIC, &end);//mark finish time
m1[0]=car1;
	
diff = BILLION * (end.tv_sec - start.tv_sec) + end.tv_nsec - start.tv_nsec;
diff = diff/(elems);        //calculating the access time per data point
	printf("elapsed time = %llu nanoseconds\n", (long long unsigned int) diff);	   	  
	     return 0;
}
#pragma GCC pop_options

